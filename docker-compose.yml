version: '3.8'

services:
  redisdb:
    image: 'redis:alpine'
    restart: unless-stopped
    container_name: redisdb
    hostname: redisdb 
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    networks:
    - mynetwork
    
  mongodb:
    image: mongo:5.0.2
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    ports:
      - $MONGODB_LOCAL_PORT:$MONGODB_DOCKER_PORT
    volumes:
      - db:/data/db

  
  api:
    build:
      dockerfile: Dockerfile
      context: "./backend"
    depends_on:
      - mongodb
      - redisdb
    volumes:
      - /node_modules
      - ./backend:/app
    environment:
      - DB_HOST=mongodb
      - DB_USER=$MONGODB_USER
      - DB_PASSWORD=$MONGODB_PASSWORD
      - DB_NAME=$MONGODB_DATABASE
      - DB_PORT=$MONGODB_DOCKER_PORT
      - CLIENT_ORIGIN=$CLIENT_ORIGIN
    ports:
      - "5000:5000"
    networks:
      - mynetwork
    

  frontend:
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      dockerfile: Dockerfile
      context: ./frontend
    volumes:
      - /src/node_modules
      - ./frontend:/src/app
    ports:
      - "3000:3000" 
    networks:
      - mynetwork

volumes: 
  db:

networks:
  mynetwork:
    driver: bridge

